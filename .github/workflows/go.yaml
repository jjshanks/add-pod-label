name: Go

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "LICENSE"

permissions:  # Explicitly define minimum required permissions
  contents: read
  pull-requests: write

jobs:
  verify:
    name: Verify and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: "1.23"
          cache: true

      - name: Run go vet
        run: go vet ./...

      - name: Run tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        if: always()  # Upload coverage even if tests fail
        with:
          name: coverage-report
          path: coverage.html
          retention-days: 7
          if-no-files-found: error

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: verify
    if: |
      github.actor == 'dependabot[bot]' ||
      contains(github.event.pull_request.body, 'run-integ-test')

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: "1.23"
          cache: true

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          install-only: true
          version: "~> v2"

      - name: Set up test environment
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Run integration tests
        run: make test-integration
        timeout-minutes: 15

  notify-failure:
    name: Notify on Failure
    needs: [verify, integration-test]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Determine test scope
        id: test-scope
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'integration-test') || github.actor == 'dependabot[bot]' }}" == "true" ]]; then
            echo "scope=verification, unit tests, and integration tests" >> $GITHUB_OUTPUT
          else
            echo "scope=verification and unit tests" >> $GITHUB_OUTPUT
          fi

      - name: Create failure comment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo, number } = context.issue;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: `‚ùå The following checks failed: ${{ steps.test-scope.outputs.scope }}. Please check the workflow logs for details.`
            });
